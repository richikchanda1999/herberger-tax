import Head from 'next/head'
import { useEffect} from 'react';
import React, { useState } from 'react';
import { ethers } from "ethers";
import Image from 'next/image'
import styles from 'src/styles/Home.module.css'
import NFTCard from 'src/pages/components/NFTCard'
// const Moralis = require("moralis").default;
// const { EvmChain } = require("@moralisweb3/evm-utils");
import { Network, Alchemy } from "alchemy-sdk";
// create a moralis instance

export default function Home() {

  const [name, setName] = useState('0x91CF787b441207e6faB4e18320521c3d23c587E3');
  const [nfts, setNFTs] = useState([])
  const [isLoading, setIsLoading] = useState(true)
  // const [address, setAddress] = useState("");

  const fetchCollection = async () => {
    const nfts = await alchemy.nft.getNftsForContract(name);
    console.log("nftsNHNF", nfts.nfts);
    return nfts; 
  }

  useEffect(() => {
    fetchCollection()
    .then(data => {
      console.log(data.nfts)
      setNFTs(data.nfts)
      setIsLoading(false)
      // console.log(data)
 
    })
    .catch(err => setNFTs([]))
  }, [name]);

  

  const settings = {
    apiKey: "GZ-kFnicrxJ4V7AeGJtc6tG0Z3LxJ1iC",
    network: Network.ETH_GOERLI,
  };
  
  const alchemy = new Alchemy(settings);
  
  const opts = {
    pageKey: "4756",
    omitMetadata: true,
    pageSize: 3,
    tokenUriTimeoutInMs: 0,
  };

  
 
  return (
    <>
      <Head>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <input type="text" value={name} onChange={(e) => setName(e.target.value)}/>
        <div className='grid grid-cols-3 gap-4'>
          {nfts.map(token => <NFTCard key={token.tokenId} nft={token} />)}
        </div>
      </main>
    </>
  )



 
}


  // ------------------ QUICKNODE --------------------------------
  // const [name, setName] = useState('0x91CF787b441207e6faB4e18320521c3d23c587E3');
  // const [nfts, setNFTs] = useState([])
  // const [isLoading, setIsLoading] = useState(true)
  // // const [address, setAddress] = useState("");

  // //function to fetch nfts by collection
  // const fetchCollection = async () => {
  //   // MAINNET
  //   // const provider = new ethers.JsonRpcProvider("https://flashy-compatible-resonance.discover.quiknode.pro/1f7b6c050b34abb084208c3ffaf88603ba5ba549/");
  //   // GOERLI
  //   const provider = new ethers.JsonRpcProvider("https://muddy-greatest-sanctuary.ethereum-goerli.discover.quiknode.pro/459444ea53385d8a16a43af1c77034a19ba23f60/");
  //   console.log(provider);
  //   const collection = await provider.send("qn_fetchNFTsByCollection", {
  //     collection: name,
  //     page: 1,
  //     perPage: 10
  //   })
  //   console.log(collection);
  //   return collection
  // }


  // useEffect(() => {
  //   console.log(name);
  //   fetchCollection()
  //   .then(data => {
  //     setNFTs(data.tokens)
  //     setIsLoading(false)
  //     console.log(data)
  //   })
  //   .catch(err => setNFTs([]))
  // }, [name]);
  // 
  // return (
  //   <>
  //     <Head>
  //       <meta name="description" content="Generated by create next app" />
  //       <meta name="viewport" content="width=device-width, initial-scale=1" />
  //       <link rel="icon" href="/favicon.ico" />
  //     </Head>
  //     <main className={styles.main}>
  //       {/* <input type="text" value={name} onChange={(e) => setName(e.target.value)}/> */}
  //       <div className='grid grid-cols-3 gap-4'>
  //         {/* {nfts.map(token => <NFTCard key={token.name} nft={token} />)} */}
  //       </div>
  //     </main>
  //   </>
  // )
  // --------------------------------------------------

